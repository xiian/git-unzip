#!/usr/bin/env python
# coding=utf-8
from __future__ import absolute_import
import sys
from os.path import dirname, realpath, abspath
import logging


prefix = dirname(dirname(realpath(abspath(__file__))))
sys.path.insert(1, prefix)

if __name__ == '__main__':
    from unzip import Unzipper
    from unzip.utils import GitCmdException, RebaseAndTagException

    logging.basicConfig(level=logging.INFO,
                        format='%(name)8s - %(funcName)8s:%(lineno)4d -  %(levelname)8s - %(message)s')

    # Get parameters
    import argparse
    parser = argparse.ArgumentParser(description='Unzip git branches', add_help=True, version='1.0')
    parser.add_argument('--unzip-from-branch', action='store', dest='unzip_from_branch', default='origin/master')
    parser.add_argument('zipped_branch', action='store')
    parser.add_argument('zip_base', action='store', nargs='?')

    results = parser.parse_args()

    try:
        unzipper = Unzipper(
            zipped_branch=results.zipped_branch,
            unzip_from_branch=results.unzip_from_branch,
            zip_base=results.zip_base,
            logger=logging.getLogger('unzip')
        )
        print unzipper.run()
    except RebaseAndTagException as e:
        print e.message
        print '-' * 100
        print e.stdout
        print '-' * 100
        print "Rebase unsuccessful. Fix it manually, then run `git tag -f %s && git unzip` to try again" % e.tag
    except GitCmdException as e:
        print e.message
        print e.stdout
        print '-' * 100
        print e.stderr